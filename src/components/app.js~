import React, { Component } from 'react';
import ReactDOM from 'react-dom'
import socketIOClient from 'socket.io-client'

import imgList from '../../scripts/image_list';

import Background from '../components/background';
import ImageListItem from '../components/image_list_item';


export default class App extends Component {
		constructor(props) {
			super(props);			
			this.state = { 	
					images: [],
					endpoint: "http://127.0.0.1:4001"
				};		
		}
		
		componentDidMount() {
			const { endpoint } = this.state;
			const socket = socketIOClient(endpoint);
			socket.on("test", data => {
				this.convertSerialPortDataToJSX(data);
			});
		}

		addImage = (img) => {
			if (!this.state.images.find(image => image.imageName === img.imageName) && this.state.images.length < 3) {
				this.setState({ images: [...this.state.images, img] });				
			}
		}
		
		removeImage = (img) => {
			const newImages = this.state.images.filter(image => image.imageName !== img.imageName); 
			this.setState({ images: newImages });
		}
		
		convertSerialPortDataToJSX = (data) => {
			const enc = new TextDecoder("utf-8");
			const convertedData = enc.decode(data).trim().toString();
			
			if (convertedData.includes("was just touched")) {
				const imgName = "img" + parseInt(convertedData.match(/\d+/)[0], 10);
				const imgData = imgList[imgName];
				this.addImage(imgData);	
			}
		}	
			
		render() {
			const imageItems = this.state.images.map((image, index) => {
				const imageKey = image.imageName;
				return <ImageListItem key={imageKey}  image={image} removeImage={this.removeImage} />
			});

			return (
    			<div className="wall-area">
     		 		<Background />
     		 		{imageItems}
     		 	</div>
   		);
		}
}
	
	
